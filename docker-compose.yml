version: "3.9"

services:
  risk-server:
    build: 
      context: .
      dockerfile: ./Risk.Server/Dockerfile
    container_name: risk-server
    ports:
      - "5000:5000"
    environment:
      SECRET_CODE: "${SECRET_CODE:-banana55}"   # default: banana55
      SERVER_PORT: "${SERVER_PORT:-5000}"       # default: 5000
    command: [
      "--StartGameCode", 
      "${SECRET_CODE:-banana55}",
      "--urls", 
      "http://0.0.0.0:5000"
    ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://risk-server:5000/css/bootstrap/bootstrap.min.css"]
      interval: 5s
      retries: 3
      timeout: 10s
      start_period: 4s


  cs1400-client:
    build:
      context: .
      dockerfile: ./Risk.Signalr.CS1400Client/Dockerfile
    container_name: cs1400-client
    depends_on:
      risk-server:
        condition: service_healthy
    environment:
      SERVER_ADDRESS: "http://risk-server:5000"
      PLAYER_NAME: "CS1400 Client"
    command: [
      "http://risk-server:5000",
      "CS1400 Client"
    ]

  # console-client:
  #   build:
  #     context: .
  #     dockerfile: ./Risk.Signalr.ConsoleClient/Dockerfile
  #   container_name: console-client
  #   depends_on:
  #     - risk-server
  #   environment:
  #     SERVER_ADDRESS: "http://risk-server:5000"
  #     PLAYER_NAME: "Console Client"
  #   command: [
  #     "dotnet", 
  #     "Risk.Signalr.ConsoleClient.dll",
  #     "--serverAddress", 
  #     "http://risk-server:5000",
  #     "--playerName", 
  #     "Console Client"
  #   ]

  # python-client:
  #   build:
  #     context: .
  #     dockerfile: ./Risk.Signalr.PythonClient/Dockerfile
  #   container_name: python-client
  #   depends_on:
  #     - risk-server
  #   environment:
  #     SERVER_ADDRESS: "risk-server"
  #     SERVER_PORT: "5000"
  #     PLAYER_NAME: "Python Client"
  #   command: [
  #     "python", 
  #     "SampleRiskClient.py"
  #   ]
